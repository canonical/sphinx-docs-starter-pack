Set up Sphinx sitemaps
=============================

Projects hosted on Read the Docs (RTD) should use the
`sphinx-sitemap <https://sphinx-sitemap.readthedocs.io/en/latest/index.html>`_
extension to deploy their own sitemap.

.. note::

    RTD generates basic sitemaps and relies on crawlers to index the site. This
    is sufficient for some projects, but RTD does not generate sitemaps for
    subprojects.

    This means **any project not using a `readthedocs-hosted` URL must generate
    their own sitemap**.

Sitemap prerequisites
---------------------

Ensure ``sphinx-sitemap`` has been added to your ``requirements.txt`` file.

Add ``sphinx_sitemap`` to ``extensions`` in your configuration file (:file:`docs/conf.py`):

.. code-block::

    extensions = ['sphinx_sitemap']

Required sitemap configuration
------------------------------

Sphinx Sitemap requires a ``html_baseurl`` configured for the project in your
configuration file. For example, in :file:`docs/conf.py`:

.. code-block::

    html_baseurl = 'https://canonical-starter-pack.readthedocs-hosted.com/'

Optional sitemap configuration
------------------------------

Sphinx sitemap uses a configurable URL scheme to set language and version options
for your documentation. Default configuration provided by the starter pack uses:

.. code-block::

    sitemap_url_scheme = "{link}"

To add versioning, this can be done manually, or you can read the version from
the RTD instance. To implement a manual version:

.. code-block::

    sitemap_url_scheme = "<version>/{link}"

Or, if the version is set with the ``version`` key in your configuration file:

.. code-block::

    sitemap_url_scheme = "{version}{link}"

To read from the provided RTD environment variable::
    
    if 'READTHEDOCS' in os.environ and os.environ['READTHEDOCS'] == True:
        sitemap_url_scheme = '{0}/{{link}}'.format(os.environ['READTHEDOCS_VERSION'])
    else:
        sitemap_url_scheme = 'MANUAL/{link}'

.. note::

    If you are implementing a sitemap on an RTD instance that is not a subproject,
    and it uses ``{link}`` for the ``sitemap_url_scheme``, RTD will replace your
    sitemap with their own.

    This is a known bug. The only current workaround is to use a different
    `sitemap name <https://sphinx-sitemap.readthedocs.io/en/latest/advanced-configuration.html#changing-the-filename>`_
    and a custom ``robots.txt`` pointing to it.

Supporting multiple versions
----------------------------

Sphinx sitemap does not support multiple versions by default. Configuring your
versioned documentation to use an appropriate version may be sufficient, as
Google and other automated tools will crawl websites for the purposes of indexing.
However, if you want comprehensive sitemaps for your documentation and all its
versions, you will need to deploy your own ``robots.txt`` file and sitemap index.

For instance, using the starter pack as an example, with three versions
(1.0, 2.0, 3.0), using the RTD URL schema of ``{version}{link}``:

1.  Ensure each version of your documentation has a sitemap generated by this
    extension with the appropriate version.

2.  Create a ``robots.txt`` file pointing to a custom ``sitemapindex.xml`` file:

.. code-block::

        User-agent: *

        Disallow: # Allow everything

        Sitemap: https://canonical-starter-pack.readthedocs-hosted.com/latest/sitemapindex.xml

3.  Create a ``sitemapindex.xml`` file which points to the sitemap files of each
    of your documentation sets:

.. code-block::

        <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xhtml="http://www.w3.org/1999/xhtml">
        <url>
        <loc>https://canonical-starter-pack.readthedocs-hosted.com/latest/sitemap.xml</loc>
        <lastmod>2025-04-30</lastmod>
        </url>
        <url>
        <loc>https://canonical-starter-pack.readthedocs-hosted.com/3.0/sitemap.xml</loc>
        <lastmod>2025-04-30</lastmod>
        </url>
        <url>
        <loc>https://canonical-starter-pack.readthedocs-hosted.com/2.0/sitemap.xml</loc>
        <lastmod>2025-04-30</lastmod>
        </url>
        <url>
        <loc>https://canonical-starter-pack.readthedocs-hosted.com/1.0/sitemap.xml</loc>
        <lastmod>2025-04-30</lastmod>
        </url>
        </urlset>

4.  Add ``robots.txt`` and ``sitemapindex.xml`` to your configuration file:

.. code-block::

        html_extra_path = ["sitemapindex.xml", "robots.txt"]

.. note::

    You may want to automate the generation of the ``sitemapindex.xml`` file. To
    see how this is done for the Ubuntu documentation library project, which
    generates a sitemap containing subproject sitemaps, see
    `the script here <https://github.com/canonical/ubuntu-documentation-library/blob/main/scripts/generate_sitemap.py>`_.